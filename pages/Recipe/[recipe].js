import styles from './Recipe.module.css'
import Head from 'next/head'
import { useRouter } from 'next/router'
import React, { useEffect, useState } from 'react'
import { apiKey } from '../../firebase'
import { MdOutlineTimer } from 'react-icons/md';
import {  GiMilkCarton, GiWheat } from 'react-icons/gi';

function recipe() {
    const router = useRouter()
    const [activeTab, setActiveTab] = useState("instructions")
    const [detail, setDetail]= useState({})
    let params = router.query

    useEffect(()=>{
        if(params.recipe){
        const fetchDetail = async() =>{
            let res = await fetch(`https://api.spoonacular.com/recipes/${params.recipe}/information?apiKey=${apiKey}`)
            const data = await res.json()
            setDetail(data)
        }
        fetchDetail()}
        
    }, [params.recipe])
    console.log(detail)
    function minutesToHoursString(minutes) {
        let hours = Math.floor(minutes / 60);
        let remainingMinutes = minutes % 60;
      
        if (hours === 0) {
          return `${remainingMinutes} min`;
        } else if (remainingMinutes === 0) {
          return `${hours} h`;
        } else {
          return `${hours} h ${remainingMinutes} min`;
        }
      }
  return (
    <>
        <Head>
            <title>What's for dinner</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/logo.png" />
        </Head>
        <div className={styles.detail}>
            <div className={styles.left}>
                <div className={styles.left_top}>
                    <div className={styles.logo}>
                        <a href='/'><img src='/logo.png' alt="logo"/></a>
                    </div>
                    <div className={styles.time}>
                        <div className={styles.time_top}>
                            <h1>{minutesToHoursString(detail.readyInMinutes)}</h1>
                        </div>
                        <div className={styles.time_bottom}>
                            <MdOutlineTimer/>
                        </div>
                    </div>
                </div>
                <div className={styles.left_middle}>
                    <div className={styles.left_middle_img}>
                        <img src={detail.image}/>
                    </div>
                </div>
                <div className={styles.left_bottom}>
                    <div className={styles.vegan}>
                        <img src='/vegan.png'/>
                    </div>
                    <div className={styles.vegan_des}>
                        <h1>{detail.vegan? "yes": "no"}</h1>
                    </div>
                </div>
            </div>
            <div className={styles.middle}>
                <div className={styles.middle_top}>
                    <div className={styles.instruction}>
                        <button
                        onClick={() => setActiveTab('instructions')}
                        className={activeTab === "instructions" ? styles.active: styles.disable}
                        >instruction</button>
                    </div>
                    <div className={styles.ingredients}>
                        <button
                        className={activeTab === "ingredients" ? styles.active: styles.disable}
                        onClick={() => setActiveTab('ingredients')}
                        >ingredients</button>
                    </div>
                </div>
                {activeTab === "instructions" && (
                    <div className={styles.middle_bottom}>
                        <p  dangerouslySetInnerHTML={{__html: detail.summary}}></p>
                        <p  dangerouslySetInnerHTML={{__html: detail.instructions}}></p>
                    </div>
                )}
                {activeTab === "ingredients" && (
                    <ul className={styles.middle_bottom}>
                        {detail.extendedIngredients.map((i)=> (
                        <li key={i.id}>{i.original}</li>) )}
                    </ul>
                )}
            </div>
            <div className={styles.right}>
                <div className={styles.right_top}>
                    <div className={styles.serving_left}><p>serving</p></div>
                    <br/>
                    <div className={styles.serving_right}>{detail.servings}</div>
                </div>
                <div className={styles.right_middle}>
                    <GiMilkCarton/>
                    <h1>{detail.dairyFree? "dairy free" : "contain dairy"}</h1>
                </div>
                <div className={styles.right_bottom}>
                    <GiWheat/>
                    <h1>{detail.glutenFree? "gluten free" : "contain gluten"}</h1>
                </div>
            </div>
        </div>
    </>
  )
}

export default recipe

