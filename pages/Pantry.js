import { doc, onSnapshot } from 'firebase/firestore'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useSelector } from 'react-redux'
import Nav from '../components/Nav'
import PantryCard from '../components/PantryCard'
import { selectUser } from '../features/search/searchSlice'
import { db } from '../firebase'
import styles from './Pantry.module.css'
import { motion, AnimatePresence } from "framer-motion"

function useDebounceSearchTerm(value, time = 500) {
    const [debounceSearchTerm, setDebounceSearchTerm] = useState(value)

    useEffect(() => {
        const timeout = setTimeout(() => {
            setDebounceSearchTerm(value)
        }, time)

        return () => {
            clearTimeout(timeout)
        }
    }, [value, time]);

    return debounceSearchTerm
}

function Pantry() {
    const user = useSelector(selectUser);
    const [searchTerm, setSearchTerm] = useState('');
    const [pantryIngredients, setPantryIngredients] = useState([]);
    const [filteredIngredients, setFilteredIngredients] = useState([]);
    const debounce = useDebounceSearchTerm(searchTerm)

    useEffect(() => {
        onSnapshot(doc(db, 'users', `${user?.email}`), (doc) => {
            setPantryIngredients(doc.data()?.savedIngredients)
            setFilteredIngredients(doc.data()?.savedIngredients)
        })
    }, [user])

    useEffect(() => {
        if(debounce ==="") {
            setFilteredIngredients(pantryIngredients);
            return
        }
        setFilteredIngredients(
          pantryIngredients.filter((ingredient) => {
            return ingredient.ingredient.toLowerCase().includes(debounce.toLowerCase());
          })
        );
    }, [debounce, pantryIngredients]);

  return (
    <div>
        <Head>
            <title>What's for dinner</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/logo.png" />
        </Head>
        <Nav/>
        <div className={styles.pantry}>
            <div className={styles.pantry_banner}>
                <h1>Your Pantry</h1>
            </div>

            <div className={styles.pantry_list}>
                <div className={styles.pantry_list_search}>
                    <input 
                    value={searchTerm} 
                    onChange={(e) => setSearchTerm(e.target.value)}
                    placeholder='Search my ingredients'
                    />
                </div>

                <motion.div
                layout
                className={styles.pantry_list_card}>
                    <AnimatePresence>
                    {filteredIngredients?.map((i, index) => (
                            <PantryCard 
                            ingredientList={filteredIngredients}
                            key={index} 
                            ingredient={i}/>
                        ))}
                    </AnimatePresence>
                </motion.div>
            </div>
        </div>
    </div>
  )
}

export default Pantry